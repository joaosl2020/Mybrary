:root{
    --book-cover-width: 200px;
    --book-cover-width-large: 325px;
    --book-cover-aspect-ratio: 0.75;
}

.book-cover{
    width: var(--book-cover-width);
    height: calc(var(--book-cover-width) / var(--book-cover-aspect-ratio));
}

.book-cover-large{
    --book-cover-width: var(--book-cover-width-large);
}

.book-grid{
    display: grid;
    justify-content: center;
    grid-gap: 2rem;
    grid-template-columns: repeat(auto-fill, var(--book-cover-width));
    /* repeat auto-fill: fills up as much space on the width as possible before it wraps up to the next line */
    /* o segundo argumento Ã© o WIDTH de cada um dos itens na array */
}

.book-grid-large{
    grid-template-columns: repeat(auto-fill, var(--book-cover-width-large));
}

.book-details{
    display: flex;
}

.book-details-label{
    font-size: 1.2rem;
    font-weight: 500;
    align-self: flex-start;
}

.book-details-grid{
    display: grid;
    align-content: flex-start; /* aligns everything at the top of the grid */
    align-items: center; /* actual items inside of it will be in the center -> text will be at the very center, not at the top/bottom */
    grid-gap: 1rem;
    grid-template-columns: auto auto;
}

.book-details-btn-grid{
    display: grid;
    justify-items: flex-start;
    align-items: flex-start; /* as duas linhas anteriores fixam os itens no TOP LEFT CORNER */
    align-content: flex-start; /* buttons will be pushed as high up against the image as possible */
    grid-template-areas:
        "edit delete"
        "author author";
    grid-gap: .5rem;
    margin-top: .5rem;
}

.book-details-author-button{
    grid-area: author; /* fala pro button tomar a area do grid do "author" */
    justify-self: stretch;
    /* width: 100%; */
}